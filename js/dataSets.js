let data_sets = [
    {
        name: 'Trading Data',
        sim_count: 144,
        events_folder: 'momentumTradingData/events',
        param_folder: null,
        parse: parseStockMarketData,
    },
    {
        name: 'MagPhyx Grid',
        sim_count: 144,
        events_folder: 'data4/events',
        param_folder: 'data4/params',
        parse: parseMagPhyxData,
    },
    {
        name: 'MagPhyx Random (7)',
        sim_count: 144,
        events_folder: 'data7/events',
        param_folder: 'data7/params',
        parse: parseMagPhyxData,
    }
];

/**
 * Data parsers should structure the data as follows:
 * 
 * simulations = [
 *   { // first simulation
 *     params:
 *     meta:
 *     events: []
 *   },
 *   { // second simulation
 *     params:
 *     meta:
 *     events: []
 *   }
 * ]
 * 
 */
function parseStockMarketData(eventData) {
    let simulations = [];

    for (let i = 0; i < eventData.length; i++) {
        let oneSim = eventData[i];

        simulations.push(
            {
                params: null,
                meta: {},
                events: []
            }
        )
        for (let j = 0; j < oneSim.length; j++) {
            simulations[i].events.push(oneSim[j]);
        }
    }
    console.log('Parsed stock market data', simulations);

    return simulations;
}

/**
 * Parse data generated by the MagPhyx simulation
 * @param eventData a 2D array of simulations/data events
 * @param paramData an array of the parameters used to generate the simulations
 * @returns an array of simulations
 */
function parseMagPhyxData(eventData, paramData) {
    let simulations = [];

    for (let i = 0; i < eventData.length; i++) {
        let oneSim = eventData[i];
        simulations.push(
            {
                params: paramData[i],
                meta: {},
                events: []
            }
        )
        for (let j = 0; j < oneSim.length; j++) {
            simulations[i].events.push(oneSim[j]);
        }
    }
    console.log('Parsed MagPhyx data', simulations);

    return simulations;
}
